name: CI

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-24.04
    name: Deploy
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: 22
      - run: pnpm install --frozen-lockfile
      - run: pnpm typecheck
      - run: pnpm lint
      - run: pnpm test
      - run: pnpm build
      - name: Get installed Playwright version
        id: playwright-version
        run: |
          echo "PLAYWRIGHT_VERSION=$(
            node --eval "console.log(
              require('./package-lock.json')
                .packages['node_modules/@playwright/test']
                .version
            )"
          )" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - run: npx playwright install --only-shell --with-deps
      - run: pnpm run test:e2e
      - run: pnpm run apply-env-to-wrangler-config
        env:
          CLOUDFLARE_WORKER_NAME: ${{ vars.CLOUDFLARE_WORKER_NAME }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_DATABASE_ID: ${{ vars.CLOUDFLARE_DATABASE_ID }}
          CLOUDFLARE_DATABASE_NAME: ${{ vars.CLOUDFLARE_DATABASE_NAME }}
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          preCommands: pnpm db:migrate-production
          command: deploy
        env:
          CLOUDFLARE_DATABASE_ID: ${{ vars.CLOUDFLARE_DATABASE_ID }}
